<div class="about">
<p>
	<h1>About</h1>
Using React Inside Your Rails Apps
Last updated: 2017-05-31

by Leigh Halliday | 12 Comments
Development

Reading Time: 10 minutes

I have never felt as productive as I do in Rails. Yet, with front-end seemingly moving further away from server-rendered views toward React, Angular, Vue, and Ember, I was unsure where Rails fit into this picture. Would it be relegated only to apps with “simple” front-ends, where holding things together with jQuery still managed to work, or perhaps to its new API mode, serving up data via RESTful JSON feeds to be consumed by client-side code and mobile apps?

The answer to that question may be yes, because Rails still does an amazing job at that. But perhaps the answer lies more in the realm of “maybe…it depends”. Would it be better to bring the best of the front-end and have it live happily within the Rails ecosystem?

In this article, Marian Serna and I will explore different ways of using React inside of your new or existing Rails apps.

“Explore different ways to use React inside your new or existing Rails apps.” via @leighchalliday

Click To Tweet
Rails Embraces JavaScript

JavaScript has its flaws and that’s why Rails embraced CoffeeScript early on instead of plain JS. With ES6 and Babel, CoffeeScript seemed less and less necessary, and in fact to me became something I disliked writing when most examples and articles online were using ES6 syntax. The js2coffee website came in handy to convert between the two syntaxes.
</p>
<p>
Using React Inside Your Rails Apps
Last updated: 2017-05-31

by Leigh Halliday | 12 Comments
Development

Reading Time: 10 minutes

I have never felt as productive as I do in Rails. Yet, with front-end seemingly moving further away from server-rendered views toward React, Angular, Vue, and Ember, I was unsure where Rails fit into this picture. Would it be relegated only to apps with “simple” front-ends, where holding things together with jQuery still managed to work, or perhaps to its new API mode, serving up data via RESTful JSON feeds to be consumed by client-side code and mobile apps?

The answer to that question may be yes, because Rails still does an amazing job at that. But perhaps the answer lies more in the realm of “maybe…it depends”. Would it be better to bring the best of the front-end and have it live happily within the Rails ecosystem?

In this article, Marian Serna and I will explore different ways of using React inside of your new or existing Rails apps.

“Explore different ways to use React inside your new or existing Rails apps.” via @leighchalliday

Click To Tweet
Rails Embraces JavaScript

JavaScript has its flaws and that’s why Rails embraced CoffeeScript early on instead of plain JS. With ES6 and Babel, CoffeeScript seemed less and less necessary, and in fact to me became something I disliked writing when most examples and articles online were using ES6 syntax. The js2coffee website came in handy to convert between the two syntaxes.
<%= link_to("home", '/users/sign_in' ) %>
</p>
</div>